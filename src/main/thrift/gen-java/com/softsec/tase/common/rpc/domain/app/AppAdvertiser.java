/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.softsec.tase.common.rpc.domain.app;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * App Advertiser Info
 */
public class AppAdvertiser implements org.apache.thrift.TBase<AppAdvertiser, AppAdvertiser._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AppAdvertiser");

  private static final org.apache.thrift.protocol.TField ADVERTISER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("advertiserName", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField ADVERTISER_WEBSITE_FIELD_DESC = new org.apache.thrift.protocol.TField("advertiserWebsite", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ADVERTISER_EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("advertiserEmail", org.apache.thrift.protocol.TType.STRING, (short)3);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AppAdvertiserStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AppAdvertiserTupleSchemeFactory());
  }

  public String advertiserName; // optional
  public String advertiserWebsite; // optional
  public String advertiserEmail; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ADVERTISER_NAME((short)1, "advertiserName"),
    ADVERTISER_WEBSITE((short)2, "advertiserWebsite"),
    ADVERTISER_EMAIL((short)3, "advertiserEmail");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ADVERTISER_NAME
          return ADVERTISER_NAME;
        case 2: // ADVERTISER_WEBSITE
          return ADVERTISER_WEBSITE;
        case 3: // ADVERTISER_EMAIL
          return ADVERTISER_EMAIL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private _Fields optionals[] = {_Fields.ADVERTISER_NAME,_Fields.ADVERTISER_WEBSITE,_Fields.ADVERTISER_EMAIL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ADVERTISER_NAME, new org.apache.thrift.meta_data.FieldMetaData("advertiserName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADVERTISER_WEBSITE, new org.apache.thrift.meta_data.FieldMetaData("advertiserWebsite", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADVERTISER_EMAIL, new org.apache.thrift.meta_data.FieldMetaData("advertiserEmail", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AppAdvertiser.class, metaDataMap);
  }

  public AppAdvertiser() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AppAdvertiser(AppAdvertiser other) {
    if (other.isSetAdvertiserName()) {
      this.advertiserName = other.advertiserName;
    }
    if (other.isSetAdvertiserWebsite()) {
      this.advertiserWebsite = other.advertiserWebsite;
    }
    if (other.isSetAdvertiserEmail()) {
      this.advertiserEmail = other.advertiserEmail;
    }
  }

  public AppAdvertiser deepCopy() {
    return new AppAdvertiser(this);
  }

  @Override
  public void clear() {
    this.advertiserName = null;
    this.advertiserWebsite = null;
    this.advertiserEmail = null;
  }

  public String getAdvertiserName() {
    return this.advertiserName;
  }

  public AppAdvertiser setAdvertiserName(String advertiserName) {
    this.advertiserName = advertiserName;
    return this;
  }

  public void unsetAdvertiserName() {
    this.advertiserName = null;
  }

  /** Returns true if field advertiserName is set (has been assigned a value) and false otherwise */
  public boolean isSetAdvertiserName() {
    return this.advertiserName != null;
  }

  public void setAdvertiserNameIsSet(boolean value) {
    if (!value) {
      this.advertiserName = null;
    }
  }

  public String getAdvertiserWebsite() {
    return this.advertiserWebsite;
  }

  public AppAdvertiser setAdvertiserWebsite(String advertiserWebsite) {
    this.advertiserWebsite = advertiserWebsite;
    return this;
  }

  public void unsetAdvertiserWebsite() {
    this.advertiserWebsite = null;
  }

  /** Returns true if field advertiserWebsite is set (has been assigned a value) and false otherwise */
  public boolean isSetAdvertiserWebsite() {
    return this.advertiserWebsite != null;
  }

  public void setAdvertiserWebsiteIsSet(boolean value) {
    if (!value) {
      this.advertiserWebsite = null;
    }
  }

  public String getAdvertiserEmail() {
    return this.advertiserEmail;
  }

  public AppAdvertiser setAdvertiserEmail(String advertiserEmail) {
    this.advertiserEmail = advertiserEmail;
    return this;
  }

  public void unsetAdvertiserEmail() {
    this.advertiserEmail = null;
  }

  /** Returns true if field advertiserEmail is set (has been assigned a value) and false otherwise */
  public boolean isSetAdvertiserEmail() {
    return this.advertiserEmail != null;
  }

  public void setAdvertiserEmailIsSet(boolean value) {
    if (!value) {
      this.advertiserEmail = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ADVERTISER_NAME:
      if (value == null) {
        unsetAdvertiserName();
      } else {
        setAdvertiserName((String)value);
      }
      break;

    case ADVERTISER_WEBSITE:
      if (value == null) {
        unsetAdvertiserWebsite();
      } else {
        setAdvertiserWebsite((String)value);
      }
      break;

    case ADVERTISER_EMAIL:
      if (value == null) {
        unsetAdvertiserEmail();
      } else {
        setAdvertiserEmail((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ADVERTISER_NAME:
      return getAdvertiserName();

    case ADVERTISER_WEBSITE:
      return getAdvertiserWebsite();

    case ADVERTISER_EMAIL:
      return getAdvertiserEmail();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ADVERTISER_NAME:
      return isSetAdvertiserName();
    case ADVERTISER_WEBSITE:
      return isSetAdvertiserWebsite();
    case ADVERTISER_EMAIL:
      return isSetAdvertiserEmail();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AppAdvertiser)
      return this.equals((AppAdvertiser)that);
    return false;
  }

  public boolean equals(AppAdvertiser that) {
    if (that == null)
      return false;

    boolean this_present_advertiserName = true && this.isSetAdvertiserName();
    boolean that_present_advertiserName = true && that.isSetAdvertiserName();
    if (this_present_advertiserName || that_present_advertiserName) {
      if (!(this_present_advertiserName && that_present_advertiserName))
        return false;
      if (!this.advertiserName.equals(that.advertiserName))
        return false;
    }

    boolean this_present_advertiserWebsite = true && this.isSetAdvertiserWebsite();
    boolean that_present_advertiserWebsite = true && that.isSetAdvertiserWebsite();
    if (this_present_advertiserWebsite || that_present_advertiserWebsite) {
      if (!(this_present_advertiserWebsite && that_present_advertiserWebsite))
        return false;
      if (!this.advertiserWebsite.equals(that.advertiserWebsite))
        return false;
    }

    boolean this_present_advertiserEmail = true && this.isSetAdvertiserEmail();
    boolean that_present_advertiserEmail = true && that.isSetAdvertiserEmail();
    if (this_present_advertiserEmail || that_present_advertiserEmail) {
      if (!(this_present_advertiserEmail && that_present_advertiserEmail))
        return false;
      if (!this.advertiserEmail.equals(that.advertiserEmail))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(AppAdvertiser other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    AppAdvertiser typedOther = (AppAdvertiser)other;

    lastComparison = Boolean.valueOf(isSetAdvertiserName()).compareTo(typedOther.isSetAdvertiserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdvertiserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.advertiserName, typedOther.advertiserName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdvertiserWebsite()).compareTo(typedOther.isSetAdvertiserWebsite());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdvertiserWebsite()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.advertiserWebsite, typedOther.advertiserWebsite);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdvertiserEmail()).compareTo(typedOther.isSetAdvertiserEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdvertiserEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.advertiserEmail, typedOther.advertiserEmail);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AppAdvertiser(");
    boolean first = true;

    if (isSetAdvertiserName()) {
      sb.append("advertiserName:");
      if (this.advertiserName == null) {
        sb.append("null");
      } else {
        sb.append(this.advertiserName);
      }
      first = false;
    }
    if (isSetAdvertiserWebsite()) {
      if (!first) sb.append(", ");
      sb.append("advertiserWebsite:");
      if (this.advertiserWebsite == null) {
        sb.append("null");
      } else {
        sb.append(this.advertiserWebsite);
      }
      first = false;
    }
    if (isSetAdvertiserEmail()) {
      if (!first) sb.append(", ");
      sb.append("advertiserEmail:");
      if (this.advertiserEmail == null) {
        sb.append("null");
      } else {
        sb.append(this.advertiserEmail);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AppAdvertiserStandardSchemeFactory implements SchemeFactory {
    public AppAdvertiserStandardScheme getScheme() {
      return new AppAdvertiserStandardScheme();
    }
  }

  private static class AppAdvertiserStandardScheme extends StandardScheme<AppAdvertiser> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AppAdvertiser struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ADVERTISER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.advertiserName = iprot.readString();
              struct.setAdvertiserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ADVERTISER_WEBSITE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.advertiserWebsite = iprot.readString();
              struct.setAdvertiserWebsiteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ADVERTISER_EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.advertiserEmail = iprot.readString();
              struct.setAdvertiserEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AppAdvertiser struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.advertiserName != null) {
        if (struct.isSetAdvertiserName()) {
          oprot.writeFieldBegin(ADVERTISER_NAME_FIELD_DESC);
          oprot.writeString(struct.advertiserName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.advertiserWebsite != null) {
        if (struct.isSetAdvertiserWebsite()) {
          oprot.writeFieldBegin(ADVERTISER_WEBSITE_FIELD_DESC);
          oprot.writeString(struct.advertiserWebsite);
          oprot.writeFieldEnd();
        }
      }
      if (struct.advertiserEmail != null) {
        if (struct.isSetAdvertiserEmail()) {
          oprot.writeFieldBegin(ADVERTISER_EMAIL_FIELD_DESC);
          oprot.writeString(struct.advertiserEmail);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AppAdvertiserTupleSchemeFactory implements SchemeFactory {
    public AppAdvertiserTupleScheme getScheme() {
      return new AppAdvertiserTupleScheme();
    }
  }

  private static class AppAdvertiserTupleScheme extends TupleScheme<AppAdvertiser> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AppAdvertiser struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAdvertiserName()) {
        optionals.set(0);
      }
      if (struct.isSetAdvertiserWebsite()) {
        optionals.set(1);
      }
      if (struct.isSetAdvertiserEmail()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetAdvertiserName()) {
        oprot.writeString(struct.advertiserName);
      }
      if (struct.isSetAdvertiserWebsite()) {
        oprot.writeString(struct.advertiserWebsite);
      }
      if (struct.isSetAdvertiserEmail()) {
        oprot.writeString(struct.advertiserEmail);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AppAdvertiser struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.advertiserName = iprot.readString();
        struct.setAdvertiserNameIsSet(true);
      }
      if (incoming.get(1)) {
        struct.advertiserWebsite = iprot.readString();
        struct.setAdvertiserWebsiteIsSet(true);
      }
      if (incoming.get(2)) {
        struct.advertiserEmail = iprot.readString();
        struct.setAdvertiserEmailIsSet(true);
      }
    }
  }

}

