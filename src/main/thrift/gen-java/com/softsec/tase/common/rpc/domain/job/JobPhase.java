/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.softsec.tase.common.rpc.domain.job;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * job type enumeration
 */
public enum JobPhase implements org.apache.thrift.TEnum {
  INITIALIZE(1),
  VALIDATE(2),
  GENERATE(3),
  PREPARE(4),
  PROCESS(5),
  PRE_STATIC(6),
  ON_STATIC(7),
  POST_STATIC(8),
  TEST(9),
  EVALUATE(10),
  PRE_DYNAMIC(11),
  ON_DYNAMIC(12),
  POST_DYNAMIC(13),
  INTEGRATE(14),
  VERIFY(15),
  PACKAGE(16),
  DEPLOY(17);

  private final int value;

  private JobPhase(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static JobPhase findByValue(int value) { 
    switch (value) {
      case 1:
        return INITIALIZE;
      case 2:
        return VALIDATE;
      case 3:
        return GENERATE;
      case 4:
        return PREPARE;
      case 5:
        return PROCESS;
      case 6:
        return PRE_STATIC;
      case 7:
        return ON_STATIC;
      case 8:
        return POST_STATIC;
      case 9:
        return TEST;
      case 10:
        return EVALUATE;
      case 11:
        return PRE_DYNAMIC;
      case 12:
        return ON_DYNAMIC;
      case 13:
        return POST_DYNAMIC;
      case 14:
        return INTEGRATE;
      case 15:
        return VERIFY;
      case 16:
        return PACKAGE;
      case 17:
        return DEPLOY;
      default:
        return null;
    }
  }
}
