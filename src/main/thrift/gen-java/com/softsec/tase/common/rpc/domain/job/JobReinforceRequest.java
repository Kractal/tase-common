/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.softsec.tase.common.rpc.domain.job;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * job reinforce request
 */
public class JobReinforceRequest implements org.apache.thrift.TBase<JobReinforceRequest, JobReinforceRequest._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("JobReinforceRequest");

  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField APP_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("appType", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField JOB_LIFECYCLE_FIELD_DESC = new org.apache.thrift.protocol.TField("jobLifecycle", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField JOB_PHASE_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("jobPhaseList", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField JOB_DISTRIBUTION_MODE_FIELD_DESC = new org.apache.thrift.protocol.TField("jobDistributionMode", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField JOB_PRIORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("jobPriority", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField JOB_OPERATION_REQUIREMENT_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("jobOperationRequirementList", org.apache.thrift.protocol.TType.LIST, (short)7);
  private static final org.apache.thrift.protocol.TField JOB_RESOURCE_REQUIREMENT_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("jobResourceRequirementList", org.apache.thrift.protocol.TType.LIST, (short)8);
  private static final org.apache.thrift.protocol.TField JOB_PARAMETER_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("jobParameterList", org.apache.thrift.protocol.TType.LIST, (short)9);
  private static final org.apache.thrift.protocol.TField IMPATIENCE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("impatienceTime", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField APP_PATH_FIELD_DESC = new org.apache.thrift.protocol.TField("appPath", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField APP_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("appInfo", org.apache.thrift.protocol.TType.STRING, (short)13);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new JobReinforceRequestStandardSchemeFactory());
    schemes.put(TupleScheme.class, new JobReinforceRequestTupleSchemeFactory());
  }

  public int userId; // optional
  /**
   * 
   * @see com.softsec.tase.common.rpc.domain.app.AppType
   */
  public com.softsec.tase.common.rpc.domain.app.AppType appType; // required
  /**
   * 
   * @see JobLifecycle
   */
  public JobLifecycle jobLifecycle; // required
  public List<JobPhase> jobPhaseList; // required
  /**
   * 
   * @see JobDistributionMode
   */
  public JobDistributionMode jobDistributionMode; // required
  /**
   * 
   * @see JobPriority
   */
  public JobPriority jobPriority; // required
  public List<JobOperationRequirement> jobOperationRequirementList; // required
  public List<JobResourceRequirement> jobResourceRequirementList; // optional
  public List<JobParameter> jobParameterList; // optional
  public long impatienceTime; // optional
  public String appPath; // required
  public ByteBuffer appInfo; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    USER_ID((short)1, "userId"),
    /**
     * 
     * @see com.softsec.tase.common.rpc.domain.app.AppType
     */
    APP_TYPE((short)2, "appType"),
    /**
     * 
     * @see JobLifecycle
     */
    JOB_LIFECYCLE((short)3, "jobLifecycle"),
    JOB_PHASE_LIST((short)4, "jobPhaseList"),
    /**
     * 
     * @see JobDistributionMode
     */
    JOB_DISTRIBUTION_MODE((short)5, "jobDistributionMode"),
    /**
     * 
     * @see JobPriority
     */
    JOB_PRIORITY((short)6, "jobPriority"),
    JOB_OPERATION_REQUIREMENT_LIST((short)7, "jobOperationRequirementList"),
    JOB_RESOURCE_REQUIREMENT_LIST((short)8, "jobResourceRequirementList"),
    JOB_PARAMETER_LIST((short)9, "jobParameterList"),
    IMPATIENCE_TIME((short)10, "impatienceTime"),
    APP_PATH((short)12, "appPath"),
    APP_INFO((short)13, "appInfo");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // USER_ID
          return USER_ID;
        case 2: // APP_TYPE
          return APP_TYPE;
        case 3: // JOB_LIFECYCLE
          return JOB_LIFECYCLE;
        case 4: // JOB_PHASE_LIST
          return JOB_PHASE_LIST;
        case 5: // JOB_DISTRIBUTION_MODE
          return JOB_DISTRIBUTION_MODE;
        case 6: // JOB_PRIORITY
          return JOB_PRIORITY;
        case 7: // JOB_OPERATION_REQUIREMENT_LIST
          return JOB_OPERATION_REQUIREMENT_LIST;
        case 8: // JOB_RESOURCE_REQUIREMENT_LIST
          return JOB_RESOURCE_REQUIREMENT_LIST;
        case 9: // JOB_PARAMETER_LIST
          return JOB_PARAMETER_LIST;
        case 10: // IMPATIENCE_TIME
          return IMPATIENCE_TIME;
        case 12: // APP_PATH
          return APP_PATH;
        case 13: // APP_INFO
          return APP_INFO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __USERID_ISSET_ID = 0;
  private static final int __IMPATIENCETIME_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.USER_ID,_Fields.JOB_RESOURCE_REQUIREMENT_LIST,_Fields.JOB_PARAMETER_LIST,_Fields.IMPATIENCE_TIME,_Fields.APP_INFO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.APP_TYPE, new org.apache.thrift.meta_data.FieldMetaData("appType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.softsec.tase.common.rpc.domain.app.AppType.class)));
    tmpMap.put(_Fields.JOB_LIFECYCLE, new org.apache.thrift.meta_data.FieldMetaData("jobLifecycle", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, JobLifecycle.class)));
    tmpMap.put(_Fields.JOB_PHASE_LIST, new org.apache.thrift.meta_data.FieldMetaData("jobPhaseList", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, JobPhase.class))));
    tmpMap.put(_Fields.JOB_DISTRIBUTION_MODE, new org.apache.thrift.meta_data.FieldMetaData("jobDistributionMode", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, JobDistributionMode.class)));
    tmpMap.put(_Fields.JOB_PRIORITY, new org.apache.thrift.meta_data.FieldMetaData("jobPriority", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, JobPriority.class)));
    tmpMap.put(_Fields.JOB_OPERATION_REQUIREMENT_LIST, new org.apache.thrift.meta_data.FieldMetaData("jobOperationRequirementList", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, JobOperationRequirement.class))));
    tmpMap.put(_Fields.JOB_RESOURCE_REQUIREMENT_LIST, new org.apache.thrift.meta_data.FieldMetaData("jobResourceRequirementList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, JobResourceRequirement.class))));
    tmpMap.put(_Fields.JOB_PARAMETER_LIST, new org.apache.thrift.meta_data.FieldMetaData("jobParameterList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, JobParameter.class))));
    tmpMap.put(_Fields.IMPATIENCE_TIME, new org.apache.thrift.meta_data.FieldMetaData("impatienceTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.APP_PATH, new org.apache.thrift.meta_data.FieldMetaData("appPath", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APP_INFO, new org.apache.thrift.meta_data.FieldMetaData("appInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , true)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(JobReinforceRequest.class, metaDataMap);
  }

  public JobReinforceRequest() {
  }

  public JobReinforceRequest(
    com.softsec.tase.common.rpc.domain.app.AppType appType,
    JobLifecycle jobLifecycle,
    List<JobPhase> jobPhaseList,
    JobDistributionMode jobDistributionMode,
    JobPriority jobPriority,
    List<JobOperationRequirement> jobOperationRequirementList,
    String appPath)
  {
    this();
    this.appType = appType;
    this.jobLifecycle = jobLifecycle;
    this.jobPhaseList = jobPhaseList;
    this.jobDistributionMode = jobDistributionMode;
    this.jobPriority = jobPriority;
    this.jobOperationRequirementList = jobOperationRequirementList;
    this.appPath = appPath;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public JobReinforceRequest(JobReinforceRequest other) {
    __isset_bitfield = other.__isset_bitfield;
    this.userId = other.userId;
    if (other.isSetAppType()) {
      this.appType = other.appType;
    }
    if (other.isSetJobLifecycle()) {
      this.jobLifecycle = other.jobLifecycle;
    }
    if (other.isSetJobPhaseList()) {
      List<JobPhase> __this__jobPhaseList = new ArrayList<JobPhase>();
      for (JobPhase other_element : other.jobPhaseList) {
        __this__jobPhaseList.add(other_element);
      }
      this.jobPhaseList = __this__jobPhaseList;
    }
    if (other.isSetJobDistributionMode()) {
      this.jobDistributionMode = other.jobDistributionMode;
    }
    if (other.isSetJobPriority()) {
      this.jobPriority = other.jobPriority;
    }
    if (other.isSetJobOperationRequirementList()) {
      List<JobOperationRequirement> __this__jobOperationRequirementList = new ArrayList<JobOperationRequirement>();
      for (JobOperationRequirement other_element : other.jobOperationRequirementList) {
        __this__jobOperationRequirementList.add(new JobOperationRequirement(other_element));
      }
      this.jobOperationRequirementList = __this__jobOperationRequirementList;
    }
    if (other.isSetJobResourceRequirementList()) {
      List<JobResourceRequirement> __this__jobResourceRequirementList = new ArrayList<JobResourceRequirement>();
      for (JobResourceRequirement other_element : other.jobResourceRequirementList) {
        __this__jobResourceRequirementList.add(new JobResourceRequirement(other_element));
      }
      this.jobResourceRequirementList = __this__jobResourceRequirementList;
    }
    if (other.isSetJobParameterList()) {
      List<JobParameter> __this__jobParameterList = new ArrayList<JobParameter>();
      for (JobParameter other_element : other.jobParameterList) {
        __this__jobParameterList.add(new JobParameter(other_element));
      }
      this.jobParameterList = __this__jobParameterList;
    }
    this.impatienceTime = other.impatienceTime;
    if (other.isSetAppPath()) {
      this.appPath = other.appPath;
    }
    if (other.isSetAppInfo()) {
      this.appInfo = org.apache.thrift.TBaseHelper.copyBinary(other.appInfo);
;
    }
  }

  public JobReinforceRequest deepCopy() {
    return new JobReinforceRequest(this);
  }

  @Override
  public void clear() {
    setUserIdIsSet(false);
    this.userId = 0;
    this.appType = null;
    this.jobLifecycle = null;
    this.jobPhaseList = null;
    this.jobDistributionMode = null;
    this.jobPriority = null;
    this.jobOperationRequirementList = null;
    this.jobResourceRequirementList = null;
    this.jobParameterList = null;
    setImpatienceTimeIsSet(false);
    this.impatienceTime = 0;
    this.appPath = null;
    this.appInfo = null;
  }

  public int getUserId() {
    return this.userId;
  }

  public JobReinforceRequest setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
  }

  /**
   * 
   * @see com.softsec.tase.common.rpc.domain.app.AppType
   */
  public com.softsec.tase.common.rpc.domain.app.AppType getAppType() {
    return this.appType;
  }

  /**
   * 
   * @see com.softsec.tase.common.rpc.domain.app.AppType
   */
  public JobReinforceRequest setAppType(com.softsec.tase.common.rpc.domain.app.AppType appType) {
    this.appType = appType;
    return this;
  }

  public void unsetAppType() {
    this.appType = null;
  }

  /** Returns true if field appType is set (has been assigned a value) and false otherwise */
  public boolean isSetAppType() {
    return this.appType != null;
  }

  public void setAppTypeIsSet(boolean value) {
    if (!value) {
      this.appType = null;
    }
  }

  /**
   * 
   * @see JobLifecycle
   */
  public JobLifecycle getJobLifecycle() {
    return this.jobLifecycle;
  }

  /**
   * 
   * @see JobLifecycle
   */
  public JobReinforceRequest setJobLifecycle(JobLifecycle jobLifecycle) {
    this.jobLifecycle = jobLifecycle;
    return this;
  }

  public void unsetJobLifecycle() {
    this.jobLifecycle = null;
  }

  /** Returns true if field jobLifecycle is set (has been assigned a value) and false otherwise */
  public boolean isSetJobLifecycle() {
    return this.jobLifecycle != null;
  }

  public void setJobLifecycleIsSet(boolean value) {
    if (!value) {
      this.jobLifecycle = null;
    }
  }

  public int getJobPhaseListSize() {
    return (this.jobPhaseList == null) ? 0 : this.jobPhaseList.size();
  }

  public java.util.Iterator<JobPhase> getJobPhaseListIterator() {
    return (this.jobPhaseList == null) ? null : this.jobPhaseList.iterator();
  }

  public void addToJobPhaseList(JobPhase elem) {
    if (this.jobPhaseList == null) {
      this.jobPhaseList = new ArrayList<JobPhase>();
    }
    this.jobPhaseList.add(elem);
  }

  public List<JobPhase> getJobPhaseList() {
    return this.jobPhaseList;
  }

  public JobReinforceRequest setJobPhaseList(List<JobPhase> jobPhaseList) {
    this.jobPhaseList = jobPhaseList;
    return this;
  }

  public void unsetJobPhaseList() {
    this.jobPhaseList = null;
  }

  /** Returns true if field jobPhaseList is set (has been assigned a value) and false otherwise */
  public boolean isSetJobPhaseList() {
    return this.jobPhaseList != null;
  }

  public void setJobPhaseListIsSet(boolean value) {
    if (!value) {
      this.jobPhaseList = null;
    }
  }

  /**
   * 
   * @see JobDistributionMode
   */
  public JobDistributionMode getJobDistributionMode() {
    return this.jobDistributionMode;
  }

  /**
   * 
   * @see JobDistributionMode
   */
  public JobReinforceRequest setJobDistributionMode(JobDistributionMode jobDistributionMode) {
    this.jobDistributionMode = jobDistributionMode;
    return this;
  }

  public void unsetJobDistributionMode() {
    this.jobDistributionMode = null;
  }

  /** Returns true if field jobDistributionMode is set (has been assigned a value) and false otherwise */
  public boolean isSetJobDistributionMode() {
    return this.jobDistributionMode != null;
  }

  public void setJobDistributionModeIsSet(boolean value) {
    if (!value) {
      this.jobDistributionMode = null;
    }
  }

  /**
   * 
   * @see JobPriority
   */
  public JobPriority getJobPriority() {
    return this.jobPriority;
  }

  /**
   * 
   * @see JobPriority
   */
  public JobReinforceRequest setJobPriority(JobPriority jobPriority) {
    this.jobPriority = jobPriority;
    return this;
  }

  public void unsetJobPriority() {
    this.jobPriority = null;
  }

  /** Returns true if field jobPriority is set (has been assigned a value) and false otherwise */
  public boolean isSetJobPriority() {
    return this.jobPriority != null;
  }

  public void setJobPriorityIsSet(boolean value) {
    if (!value) {
      this.jobPriority = null;
    }
  }

  public int getJobOperationRequirementListSize() {
    return (this.jobOperationRequirementList == null) ? 0 : this.jobOperationRequirementList.size();
  }

  public java.util.Iterator<JobOperationRequirement> getJobOperationRequirementListIterator() {
    return (this.jobOperationRequirementList == null) ? null : this.jobOperationRequirementList.iterator();
  }

  public void addToJobOperationRequirementList(JobOperationRequirement elem) {
    if (this.jobOperationRequirementList == null) {
      this.jobOperationRequirementList = new ArrayList<JobOperationRequirement>();
    }
    this.jobOperationRequirementList.add(elem);
  }

  public List<JobOperationRequirement> getJobOperationRequirementList() {
    return this.jobOperationRequirementList;
  }

  public JobReinforceRequest setJobOperationRequirementList(List<JobOperationRequirement> jobOperationRequirementList) {
    this.jobOperationRequirementList = jobOperationRequirementList;
    return this;
  }

  public void unsetJobOperationRequirementList() {
    this.jobOperationRequirementList = null;
  }

  /** Returns true if field jobOperationRequirementList is set (has been assigned a value) and false otherwise */
  public boolean isSetJobOperationRequirementList() {
    return this.jobOperationRequirementList != null;
  }

  public void setJobOperationRequirementListIsSet(boolean value) {
    if (!value) {
      this.jobOperationRequirementList = null;
    }
  }

  public int getJobResourceRequirementListSize() {
    return (this.jobResourceRequirementList == null) ? 0 : this.jobResourceRequirementList.size();
  }

  public java.util.Iterator<JobResourceRequirement> getJobResourceRequirementListIterator() {
    return (this.jobResourceRequirementList == null) ? null : this.jobResourceRequirementList.iterator();
  }

  public void addToJobResourceRequirementList(JobResourceRequirement elem) {
    if (this.jobResourceRequirementList == null) {
      this.jobResourceRequirementList = new ArrayList<JobResourceRequirement>();
    }
    this.jobResourceRequirementList.add(elem);
  }

  public List<JobResourceRequirement> getJobResourceRequirementList() {
    return this.jobResourceRequirementList;
  }

  public JobReinforceRequest setJobResourceRequirementList(List<JobResourceRequirement> jobResourceRequirementList) {
    this.jobResourceRequirementList = jobResourceRequirementList;
    return this;
  }

  public void unsetJobResourceRequirementList() {
    this.jobResourceRequirementList = null;
  }

  /** Returns true if field jobResourceRequirementList is set (has been assigned a value) and false otherwise */
  public boolean isSetJobResourceRequirementList() {
    return this.jobResourceRequirementList != null;
  }

  public void setJobResourceRequirementListIsSet(boolean value) {
    if (!value) {
      this.jobResourceRequirementList = null;
    }
  }

  public int getJobParameterListSize() {
    return (this.jobParameterList == null) ? 0 : this.jobParameterList.size();
  }

  public java.util.Iterator<JobParameter> getJobParameterListIterator() {
    return (this.jobParameterList == null) ? null : this.jobParameterList.iterator();
  }

  public void addToJobParameterList(JobParameter elem) {
    if (this.jobParameterList == null) {
      this.jobParameterList = new ArrayList<JobParameter>();
    }
    this.jobParameterList.add(elem);
  }

  public List<JobParameter> getJobParameterList() {
    return this.jobParameterList;
  }

  public JobReinforceRequest setJobParameterList(List<JobParameter> jobParameterList) {
    this.jobParameterList = jobParameterList;
    return this;
  }

  public void unsetJobParameterList() {
    this.jobParameterList = null;
  }

  /** Returns true if field jobParameterList is set (has been assigned a value) and false otherwise */
  public boolean isSetJobParameterList() {
    return this.jobParameterList != null;
  }

  public void setJobParameterListIsSet(boolean value) {
    if (!value) {
      this.jobParameterList = null;
    }
  }

  public long getImpatienceTime() {
    return this.impatienceTime;
  }

  public JobReinforceRequest setImpatienceTime(long impatienceTime) {
    this.impatienceTime = impatienceTime;
    setImpatienceTimeIsSet(true);
    return this;
  }

  public void unsetImpatienceTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __IMPATIENCETIME_ISSET_ID);
  }

  /** Returns true if field impatienceTime is set (has been assigned a value) and false otherwise */
  public boolean isSetImpatienceTime() {
    return EncodingUtils.testBit(__isset_bitfield, __IMPATIENCETIME_ISSET_ID);
  }

  public void setImpatienceTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __IMPATIENCETIME_ISSET_ID, value);
  }

  public String getAppPath() {
    return this.appPath;
  }

  public JobReinforceRequest setAppPath(String appPath) {
    this.appPath = appPath;
    return this;
  }

  public void unsetAppPath() {
    this.appPath = null;
  }

  /** Returns true if field appPath is set (has been assigned a value) and false otherwise */
  public boolean isSetAppPath() {
    return this.appPath != null;
  }

  public void setAppPathIsSet(boolean value) {
    if (!value) {
      this.appPath = null;
    }
  }

  public byte[] getAppInfo() {
    setAppInfo(org.apache.thrift.TBaseHelper.rightSize(appInfo));
    return appInfo == null ? null : appInfo.array();
  }

  public ByteBuffer bufferForAppInfo() {
    return appInfo;
  }

  public JobReinforceRequest setAppInfo(byte[] appInfo) {
    setAppInfo(appInfo == null ? (ByteBuffer)null : ByteBuffer.wrap(appInfo));
    return this;
  }

  public JobReinforceRequest setAppInfo(ByteBuffer appInfo) {
    this.appInfo = appInfo;
    return this;
  }

  public void unsetAppInfo() {
    this.appInfo = null;
  }

  /** Returns true if field appInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetAppInfo() {
    return this.appInfo != null;
  }

  public void setAppInfoIsSet(boolean value) {
    if (!value) {
      this.appInfo = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Integer)value);
      }
      break;

    case APP_TYPE:
      if (value == null) {
        unsetAppType();
      } else {
        setAppType((com.softsec.tase.common.rpc.domain.app.AppType)value);
      }
      break;

    case JOB_LIFECYCLE:
      if (value == null) {
        unsetJobLifecycle();
      } else {
        setJobLifecycle((JobLifecycle)value);
      }
      break;

    case JOB_PHASE_LIST:
      if (value == null) {
        unsetJobPhaseList();
      } else {
        setJobPhaseList((List<JobPhase>)value);
      }
      break;

    case JOB_DISTRIBUTION_MODE:
      if (value == null) {
        unsetJobDistributionMode();
      } else {
        setJobDistributionMode((JobDistributionMode)value);
      }
      break;

    case JOB_PRIORITY:
      if (value == null) {
        unsetJobPriority();
      } else {
        setJobPriority((JobPriority)value);
      }
      break;

    case JOB_OPERATION_REQUIREMENT_LIST:
      if (value == null) {
        unsetJobOperationRequirementList();
      } else {
        setJobOperationRequirementList((List<JobOperationRequirement>)value);
      }
      break;

    case JOB_RESOURCE_REQUIREMENT_LIST:
      if (value == null) {
        unsetJobResourceRequirementList();
      } else {
        setJobResourceRequirementList((List<JobResourceRequirement>)value);
      }
      break;

    case JOB_PARAMETER_LIST:
      if (value == null) {
        unsetJobParameterList();
      } else {
        setJobParameterList((List<JobParameter>)value);
      }
      break;

    case IMPATIENCE_TIME:
      if (value == null) {
        unsetImpatienceTime();
      } else {
        setImpatienceTime((Long)value);
      }
      break;

    case APP_PATH:
      if (value == null) {
        unsetAppPath();
      } else {
        setAppPath((String)value);
      }
      break;

    case APP_INFO:
      if (value == null) {
        unsetAppInfo();
      } else {
        setAppInfo((ByteBuffer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case USER_ID:
      return Integer.valueOf(getUserId());

    case APP_TYPE:
      return getAppType();

    case JOB_LIFECYCLE:
      return getJobLifecycle();

    case JOB_PHASE_LIST:
      return getJobPhaseList();

    case JOB_DISTRIBUTION_MODE:
      return getJobDistributionMode();

    case JOB_PRIORITY:
      return getJobPriority();

    case JOB_OPERATION_REQUIREMENT_LIST:
      return getJobOperationRequirementList();

    case JOB_RESOURCE_REQUIREMENT_LIST:
      return getJobResourceRequirementList();

    case JOB_PARAMETER_LIST:
      return getJobParameterList();

    case IMPATIENCE_TIME:
      return Long.valueOf(getImpatienceTime());

    case APP_PATH:
      return getAppPath();

    case APP_INFO:
      return getAppInfo();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case USER_ID:
      return isSetUserId();
    case APP_TYPE:
      return isSetAppType();
    case JOB_LIFECYCLE:
      return isSetJobLifecycle();
    case JOB_PHASE_LIST:
      return isSetJobPhaseList();
    case JOB_DISTRIBUTION_MODE:
      return isSetJobDistributionMode();
    case JOB_PRIORITY:
      return isSetJobPriority();
    case JOB_OPERATION_REQUIREMENT_LIST:
      return isSetJobOperationRequirementList();
    case JOB_RESOURCE_REQUIREMENT_LIST:
      return isSetJobResourceRequirementList();
    case JOB_PARAMETER_LIST:
      return isSetJobParameterList();
    case IMPATIENCE_TIME:
      return isSetImpatienceTime();
    case APP_PATH:
      return isSetAppPath();
    case APP_INFO:
      return isSetAppInfo();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof JobReinforceRequest)
      return this.equals((JobReinforceRequest)that);
    return false;
  }

  public boolean equals(JobReinforceRequest that) {
    if (that == null)
      return false;

    boolean this_present_userId = true && this.isSetUserId();
    boolean that_present_userId = true && that.isSetUserId();
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_appType = true && this.isSetAppType();
    boolean that_present_appType = true && that.isSetAppType();
    if (this_present_appType || that_present_appType) {
      if (!(this_present_appType && that_present_appType))
        return false;
      if (!this.appType.equals(that.appType))
        return false;
    }

    boolean this_present_jobLifecycle = true && this.isSetJobLifecycle();
    boolean that_present_jobLifecycle = true && that.isSetJobLifecycle();
    if (this_present_jobLifecycle || that_present_jobLifecycle) {
      if (!(this_present_jobLifecycle && that_present_jobLifecycle))
        return false;
      if (!this.jobLifecycle.equals(that.jobLifecycle))
        return false;
    }

    boolean this_present_jobPhaseList = true && this.isSetJobPhaseList();
    boolean that_present_jobPhaseList = true && that.isSetJobPhaseList();
    if (this_present_jobPhaseList || that_present_jobPhaseList) {
      if (!(this_present_jobPhaseList && that_present_jobPhaseList))
        return false;
      if (!this.jobPhaseList.equals(that.jobPhaseList))
        return false;
    }

    boolean this_present_jobDistributionMode = true && this.isSetJobDistributionMode();
    boolean that_present_jobDistributionMode = true && that.isSetJobDistributionMode();
    if (this_present_jobDistributionMode || that_present_jobDistributionMode) {
      if (!(this_present_jobDistributionMode && that_present_jobDistributionMode))
        return false;
      if (!this.jobDistributionMode.equals(that.jobDistributionMode))
        return false;
    }

    boolean this_present_jobPriority = true && this.isSetJobPriority();
    boolean that_present_jobPriority = true && that.isSetJobPriority();
    if (this_present_jobPriority || that_present_jobPriority) {
      if (!(this_present_jobPriority && that_present_jobPriority))
        return false;
      if (!this.jobPriority.equals(that.jobPriority))
        return false;
    }

    boolean this_present_jobOperationRequirementList = true && this.isSetJobOperationRequirementList();
    boolean that_present_jobOperationRequirementList = true && that.isSetJobOperationRequirementList();
    if (this_present_jobOperationRequirementList || that_present_jobOperationRequirementList) {
      if (!(this_present_jobOperationRequirementList && that_present_jobOperationRequirementList))
        return false;
      if (!this.jobOperationRequirementList.equals(that.jobOperationRequirementList))
        return false;
    }

    boolean this_present_jobResourceRequirementList = true && this.isSetJobResourceRequirementList();
    boolean that_present_jobResourceRequirementList = true && that.isSetJobResourceRequirementList();
    if (this_present_jobResourceRequirementList || that_present_jobResourceRequirementList) {
      if (!(this_present_jobResourceRequirementList && that_present_jobResourceRequirementList))
        return false;
      if (!this.jobResourceRequirementList.equals(that.jobResourceRequirementList))
        return false;
    }

    boolean this_present_jobParameterList = true && this.isSetJobParameterList();
    boolean that_present_jobParameterList = true && that.isSetJobParameterList();
    if (this_present_jobParameterList || that_present_jobParameterList) {
      if (!(this_present_jobParameterList && that_present_jobParameterList))
        return false;
      if (!this.jobParameterList.equals(that.jobParameterList))
        return false;
    }

    boolean this_present_impatienceTime = true && this.isSetImpatienceTime();
    boolean that_present_impatienceTime = true && that.isSetImpatienceTime();
    if (this_present_impatienceTime || that_present_impatienceTime) {
      if (!(this_present_impatienceTime && that_present_impatienceTime))
        return false;
      if (this.impatienceTime != that.impatienceTime)
        return false;
    }

    boolean this_present_appPath = true && this.isSetAppPath();
    boolean that_present_appPath = true && that.isSetAppPath();
    if (this_present_appPath || that_present_appPath) {
      if (!(this_present_appPath && that_present_appPath))
        return false;
      if (!this.appPath.equals(that.appPath))
        return false;
    }

    boolean this_present_appInfo = true && this.isSetAppInfo();
    boolean that_present_appInfo = true && that.isSetAppInfo();
    if (this_present_appInfo || that_present_appInfo) {
      if (!(this_present_appInfo && that_present_appInfo))
        return false;
      if (!this.appInfo.equals(that.appInfo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(JobReinforceRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    JobReinforceRequest typedOther = (JobReinforceRequest)other;

    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(typedOther.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, typedOther.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppType()).compareTo(typedOther.isSetAppType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appType, typedOther.appType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobLifecycle()).compareTo(typedOther.isSetJobLifecycle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobLifecycle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobLifecycle, typedOther.jobLifecycle);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobPhaseList()).compareTo(typedOther.isSetJobPhaseList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobPhaseList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobPhaseList, typedOther.jobPhaseList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobDistributionMode()).compareTo(typedOther.isSetJobDistributionMode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobDistributionMode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobDistributionMode, typedOther.jobDistributionMode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobPriority()).compareTo(typedOther.isSetJobPriority());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobPriority()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobPriority, typedOther.jobPriority);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobOperationRequirementList()).compareTo(typedOther.isSetJobOperationRequirementList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobOperationRequirementList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobOperationRequirementList, typedOther.jobOperationRequirementList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobResourceRequirementList()).compareTo(typedOther.isSetJobResourceRequirementList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobResourceRequirementList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobResourceRequirementList, typedOther.jobResourceRequirementList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJobParameterList()).compareTo(typedOther.isSetJobParameterList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobParameterList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobParameterList, typedOther.jobParameterList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetImpatienceTime()).compareTo(typedOther.isSetImpatienceTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetImpatienceTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.impatienceTime, typedOther.impatienceTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppPath()).compareTo(typedOther.isSetAppPath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppPath()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appPath, typedOther.appPath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppInfo()).compareTo(typedOther.isSetAppInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appInfo, typedOther.appInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("JobReinforceRequest(");
    boolean first = true;

    if (isSetUserId()) {
      sb.append("userId:");
      sb.append(this.userId);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("appType:");
    if (this.appType == null) {
      sb.append("null");
    } else {
      sb.append(this.appType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("jobLifecycle:");
    if (this.jobLifecycle == null) {
      sb.append("null");
    } else {
      sb.append(this.jobLifecycle);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("jobPhaseList:");
    if (this.jobPhaseList == null) {
      sb.append("null");
    } else {
      sb.append(this.jobPhaseList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("jobDistributionMode:");
    if (this.jobDistributionMode == null) {
      sb.append("null");
    } else {
      sb.append(this.jobDistributionMode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("jobPriority:");
    if (this.jobPriority == null) {
      sb.append("null");
    } else {
      sb.append(this.jobPriority);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("jobOperationRequirementList:");
    if (this.jobOperationRequirementList == null) {
      sb.append("null");
    } else {
      sb.append(this.jobOperationRequirementList);
    }
    first = false;
    if (isSetJobResourceRequirementList()) {
      if (!first) sb.append(", ");
      sb.append("jobResourceRequirementList:");
      if (this.jobResourceRequirementList == null) {
        sb.append("null");
      } else {
        sb.append(this.jobResourceRequirementList);
      }
      first = false;
    }
    if (isSetJobParameterList()) {
      if (!first) sb.append(", ");
      sb.append("jobParameterList:");
      if (this.jobParameterList == null) {
        sb.append("null");
      } else {
        sb.append(this.jobParameterList);
      }
      first = false;
    }
    if (isSetImpatienceTime()) {
      if (!first) sb.append(", ");
      sb.append("impatienceTime:");
      sb.append(this.impatienceTime);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("appPath:");
    if (this.appPath == null) {
      sb.append("null");
    } else {
      sb.append(this.appPath);
    }
    first = false;
    if (isSetAppInfo()) {
      if (!first) sb.append(", ");
      sb.append("appInfo:");
      if (this.appInfo == null) {
        sb.append("null");
      } else {
        org.apache.thrift.TBaseHelper.toString(this.appInfo, sb);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (appType == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'appType' was not present! Struct: " + toString());
    }
    if (jobLifecycle == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'jobLifecycle' was not present! Struct: " + toString());
    }
    if (jobPhaseList == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'jobPhaseList' was not present! Struct: " + toString());
    }
    if (jobDistributionMode == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'jobDistributionMode' was not present! Struct: " + toString());
    }
    if (jobPriority == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'jobPriority' was not present! Struct: " + toString());
    }
    if (jobOperationRequirementList == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'jobOperationRequirementList' was not present! Struct: " + toString());
    }
    if (appPath == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'appPath' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class JobReinforceRequestStandardSchemeFactory implements SchemeFactory {
    public JobReinforceRequestStandardScheme getScheme() {
      return new JobReinforceRequestStandardScheme();
    }
  }

  private static class JobReinforceRequestStandardScheme extends StandardScheme<JobReinforceRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, JobReinforceRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userId = iprot.readI32();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // APP_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.appType = com.softsec.tase.common.rpc.domain.app.AppType.findByValue(iprot.readI32());
              struct.setAppTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // JOB_LIFECYCLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.jobLifecycle = JobLifecycle.findByValue(iprot.readI32());
              struct.setJobLifecycleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // JOB_PHASE_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                struct.jobPhaseList = new ArrayList<JobPhase>(_list8.size);
                for (int _i9 = 0; _i9 < _list8.size; ++_i9)
                {
                  JobPhase _elem10; // required
                  _elem10 = JobPhase.findByValue(iprot.readI32());
                  struct.jobPhaseList.add(_elem10);
                }
                iprot.readListEnd();
              }
              struct.setJobPhaseListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // JOB_DISTRIBUTION_MODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.jobDistributionMode = JobDistributionMode.findByValue(iprot.readI32());
              struct.setJobDistributionModeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // JOB_PRIORITY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.jobPriority = JobPriority.findByValue(iprot.readI32());
              struct.setJobPriorityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // JOB_OPERATION_REQUIREMENT_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list11 = iprot.readListBegin();
                struct.jobOperationRequirementList = new ArrayList<JobOperationRequirement>(_list11.size);
                for (int _i12 = 0; _i12 < _list11.size; ++_i12)
                {
                  JobOperationRequirement _elem13; // required
                  _elem13 = new JobOperationRequirement();
                  _elem13.read(iprot);
                  struct.jobOperationRequirementList.add(_elem13);
                }
                iprot.readListEnd();
              }
              struct.setJobOperationRequirementListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // JOB_RESOURCE_REQUIREMENT_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list14 = iprot.readListBegin();
                struct.jobResourceRequirementList = new ArrayList<JobResourceRequirement>(_list14.size);
                for (int _i15 = 0; _i15 < _list14.size; ++_i15)
                {
                  JobResourceRequirement _elem16; // required
                  _elem16 = new JobResourceRequirement();
                  _elem16.read(iprot);
                  struct.jobResourceRequirementList.add(_elem16);
                }
                iprot.readListEnd();
              }
              struct.setJobResourceRequirementListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // JOB_PARAMETER_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list17 = iprot.readListBegin();
                struct.jobParameterList = new ArrayList<JobParameter>(_list17.size);
                for (int _i18 = 0; _i18 < _list17.size; ++_i18)
                {
                  JobParameter _elem19; // required
                  _elem19 = new JobParameter();
                  _elem19.read(iprot);
                  struct.jobParameterList.add(_elem19);
                }
                iprot.readListEnd();
              }
              struct.setJobParameterListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // IMPATIENCE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.impatienceTime = iprot.readI64();
              struct.setImpatienceTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // APP_PATH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appPath = iprot.readString();
              struct.setAppPathIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // APP_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appInfo = iprot.readBinary();
              struct.setAppInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, JobReinforceRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetUserId()) {
        oprot.writeFieldBegin(USER_ID_FIELD_DESC);
        oprot.writeI32(struct.userId);
        oprot.writeFieldEnd();
      }
      if (struct.appType != null) {
        oprot.writeFieldBegin(APP_TYPE_FIELD_DESC);
        oprot.writeI32(struct.appType.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.jobLifecycle != null) {
        oprot.writeFieldBegin(JOB_LIFECYCLE_FIELD_DESC);
        oprot.writeI32(struct.jobLifecycle.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.jobPhaseList != null) {
        oprot.writeFieldBegin(JOB_PHASE_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.jobPhaseList.size()));
          for (JobPhase _iter20 : struct.jobPhaseList)
          {
            oprot.writeI32(_iter20.getValue());
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.jobDistributionMode != null) {
        oprot.writeFieldBegin(JOB_DISTRIBUTION_MODE_FIELD_DESC);
        oprot.writeI32(struct.jobDistributionMode.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.jobPriority != null) {
        oprot.writeFieldBegin(JOB_PRIORITY_FIELD_DESC);
        oprot.writeI32(struct.jobPriority.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.jobOperationRequirementList != null) {
        oprot.writeFieldBegin(JOB_OPERATION_REQUIREMENT_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.jobOperationRequirementList.size()));
          for (JobOperationRequirement _iter21 : struct.jobOperationRequirementList)
          {
            _iter21.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.jobResourceRequirementList != null) {
        if (struct.isSetJobResourceRequirementList()) {
          oprot.writeFieldBegin(JOB_RESOURCE_REQUIREMENT_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.jobResourceRequirementList.size()));
            for (JobResourceRequirement _iter22 : struct.jobResourceRequirementList)
            {
              _iter22.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.jobParameterList != null) {
        if (struct.isSetJobParameterList()) {
          oprot.writeFieldBegin(JOB_PARAMETER_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.jobParameterList.size()));
            for (JobParameter _iter23 : struct.jobParameterList)
            {
              _iter23.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetImpatienceTime()) {
        oprot.writeFieldBegin(IMPATIENCE_TIME_FIELD_DESC);
        oprot.writeI64(struct.impatienceTime);
        oprot.writeFieldEnd();
      }
      if (struct.appPath != null) {
        oprot.writeFieldBegin(APP_PATH_FIELD_DESC);
        oprot.writeString(struct.appPath);
        oprot.writeFieldEnd();
      }
      if (struct.appInfo != null) {
        if (struct.isSetAppInfo()) {
          oprot.writeFieldBegin(APP_INFO_FIELD_DESC);
          oprot.writeBinary(struct.appInfo);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class JobReinforceRequestTupleSchemeFactory implements SchemeFactory {
    public JobReinforceRequestTupleScheme getScheme() {
      return new JobReinforceRequestTupleScheme();
    }
  }

  private static class JobReinforceRequestTupleScheme extends TupleScheme<JobReinforceRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, JobReinforceRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct.appType.getValue());
      oprot.writeI32(struct.jobLifecycle.getValue());
      {
        oprot.writeI32(struct.jobPhaseList.size());
        for (JobPhase _iter24 : struct.jobPhaseList)
        {
          oprot.writeI32(_iter24.getValue());
        }
      }
      oprot.writeI32(struct.jobDistributionMode.getValue());
      oprot.writeI32(struct.jobPriority.getValue());
      {
        oprot.writeI32(struct.jobOperationRequirementList.size());
        for (JobOperationRequirement _iter25 : struct.jobOperationRequirementList)
        {
          _iter25.write(oprot);
        }
      }
      oprot.writeString(struct.appPath);
      BitSet optionals = new BitSet();
      if (struct.isSetUserId()) {
        optionals.set(0);
      }
      if (struct.isSetJobResourceRequirementList()) {
        optionals.set(1);
      }
      if (struct.isSetJobParameterList()) {
        optionals.set(2);
      }
      if (struct.isSetImpatienceTime()) {
        optionals.set(3);
      }
      if (struct.isSetAppInfo()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetUserId()) {
        oprot.writeI32(struct.userId);
      }
      if (struct.isSetJobResourceRequirementList()) {
        {
          oprot.writeI32(struct.jobResourceRequirementList.size());
          for (JobResourceRequirement _iter26 : struct.jobResourceRequirementList)
          {
            _iter26.write(oprot);
          }
        }
      }
      if (struct.isSetJobParameterList()) {
        {
          oprot.writeI32(struct.jobParameterList.size());
          for (JobParameter _iter27 : struct.jobParameterList)
          {
            _iter27.write(oprot);
          }
        }
      }
      if (struct.isSetImpatienceTime()) {
        oprot.writeI64(struct.impatienceTime);
      }
      if (struct.isSetAppInfo()) {
        oprot.writeBinary(struct.appInfo);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, JobReinforceRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.appType = com.softsec.tase.common.rpc.domain.app.AppType.findByValue(iprot.readI32());
      struct.setAppTypeIsSet(true);
      struct.jobLifecycle = JobLifecycle.findByValue(iprot.readI32());
      struct.setJobLifecycleIsSet(true);
      {
        org.apache.thrift.protocol.TList _list28 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
        struct.jobPhaseList = new ArrayList<JobPhase>(_list28.size);
        for (int _i29 = 0; _i29 < _list28.size; ++_i29)
        {
          JobPhase _elem30; // required
          _elem30 = JobPhase.findByValue(iprot.readI32());
          struct.jobPhaseList.add(_elem30);
        }
      }
      struct.setJobPhaseListIsSet(true);
      struct.jobDistributionMode = JobDistributionMode.findByValue(iprot.readI32());
      struct.setJobDistributionModeIsSet(true);
      struct.jobPriority = JobPriority.findByValue(iprot.readI32());
      struct.setJobPriorityIsSet(true);
      {
        org.apache.thrift.protocol.TList _list31 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.jobOperationRequirementList = new ArrayList<JobOperationRequirement>(_list31.size);
        for (int _i32 = 0; _i32 < _list31.size; ++_i32)
        {
          JobOperationRequirement _elem33; // required
          _elem33 = new JobOperationRequirement();
          _elem33.read(iprot);
          struct.jobOperationRequirementList.add(_elem33);
        }
      }
      struct.setJobOperationRequirementListIsSet(true);
      struct.appPath = iprot.readString();
      struct.setAppPathIsSet(true);
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.userId = iprot.readI32();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list34 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.jobResourceRequirementList = new ArrayList<JobResourceRequirement>(_list34.size);
          for (int _i35 = 0; _i35 < _list34.size; ++_i35)
          {
            JobResourceRequirement _elem36; // required
            _elem36 = new JobResourceRequirement();
            _elem36.read(iprot);
            struct.jobResourceRequirementList.add(_elem36);
          }
        }
        struct.setJobResourceRequirementListIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.jobParameterList = new ArrayList<JobParameter>(_list37.size);
          for (int _i38 = 0; _i38 < _list37.size; ++_i38)
          {
            JobParameter _elem39; // required
            _elem39 = new JobParameter();
            _elem39.read(iprot);
            struct.jobParameterList.add(_elem39);
          }
        }
        struct.setJobParameterListIsSet(true);
      }
      if (incoming.get(3)) {
        struct.impatienceTime = iprot.readI64();
        struct.setImpatienceTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.appInfo = iprot.readBinary();
        struct.setAppInfoIsSet(true);
      }
    }
  }

}

